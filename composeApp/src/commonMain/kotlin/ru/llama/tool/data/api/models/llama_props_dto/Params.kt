package ru.llama.tool.data.api.models.llama_props_dto

import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable

@Serializable
data class Params(
    val chat_format: String? = null,
    val dry_allowed_length: Int? = null,
    val dry_base: Double? = null,
    val dry_multiplier: Double? = null,
    val dry_penalty_last_n: Int? = null,
    val dry_sequence_breakers: List<String>? = null,
    val dynatemp_exponent: Double? = null,
    val dynatemp_range: Double? = null,
    val frequency_penalty: Double? = null,
    val grammar: String? = null,
    val grammar_lazy: Boolean? = null,
    val grammar_triggers: List<String>? = null,
    val ignore_eos: Boolean? = null,
    val logit_bias: List<String>? = null,
    val lora: List<String>? = null,
    val max_tokens: Int? = null,
    val min_keep: Int? = null,
    val min_p: Double? = null,
    val mirostat: Int? = null,
    val mirostat_eta: Double? = null,
    val mirostat_tau: Double? = null,
    val n_discard: Int? = null,
    val n_keep: Int? = null,
    val n_predict: Int? = null,
    val n_probs: Int? = null,
    val post_sampling_probs: Boolean? = null,
    val presence_penalty: Double? = null,
    val preserved_tokens: List<String>? = null,
    val reasoning_format: String? = null,
    val reasoning_in_content: Boolean? = null,
    val repeat_last_n: Int? = null,
    val repeat_penalty: Double? = null,
    val samplers: List<String>? = null,
    val seed: Long? = null,
    @SerialName("speculative.n_max") val speculative_n_max: Int? = null,
    @SerialName("speculative.n_min") val speculative_n_min: Int? = null,
    @SerialName("speculative.p_min") val speculative_p_min: Double? = null,
    val stop: List<String>? = null,
    val stream: Boolean? = null,
    val temperature: Double? = null,
    val thinking_forced_open: Boolean? = null,
    val timings_per_token: Boolean? = null,
    val top_k: Int? = null,
    val top_n_sigma: Double? = null,
    val top_p: Double? = null,
    val typical_p: Double? = null,
    val xtc_probability: Double? = null,
    val xtc_threshold: Double? = null
)